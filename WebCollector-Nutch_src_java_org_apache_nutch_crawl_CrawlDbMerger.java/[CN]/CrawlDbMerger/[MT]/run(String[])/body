{
  if (args.length < 2) {
    System.err.println("Usage: CrawlDbMerger <output_crawldb> <crawldb1> [<crawldb2> <crawldb3> ...] [-normalize] [-filter]");
    System.err.println("\toutput_crawldb\toutput CrawlDb");
    System.err.println("\tcrawldb1 ...\tinput CrawlDb-s (single input CrawlDb is ok)");
    System.err.println("\t-normalize\tuse URLNormalizer on urls in the crawldb(s) (usually not needed)");
    System.err.println("\t-filter\tuse URLFilters on urls in the crawldb(s)");
    return -1;
  }
  Path output=new Path(args[0]);
  ArrayList<Path> dbs=new ArrayList<Path>();
  boolean filter=false;
  boolean normalize=false;
  FileSystem fs=FileSystem.get(getConf());
  for (int i=1; i < args.length; i++) {
    if (args[i].equals("-filter")) {
      filter=true;
      continue;
    }
 else     if (args[i].equals("-normalize")) {
      normalize=true;
      continue;
    }
    final Path dbPath=new Path(args[i]);
    if (fs.exists(dbPath))     dbs.add(dbPath);
  }
  try {
    merge(output,dbs.toArray(new Path[dbs.size()]),normalize,filter);
    return 0;
  }
 catch (  Exception e) {
    LOG.error("CrawlDb merge: " + StringUtils.stringifyException(e));
    return -1;
  }
}
