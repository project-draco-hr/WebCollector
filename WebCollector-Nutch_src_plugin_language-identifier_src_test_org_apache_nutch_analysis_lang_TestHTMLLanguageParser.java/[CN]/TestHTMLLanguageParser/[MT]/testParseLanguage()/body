{
  String tests[][]={{"(SCHEME=ISO.639-1) sv","sv"},{"(SCHEME=RFC1766) sv-FI","sv"},{"(SCHEME=Z39.53) SWE","sv"},{"EN_US, SV, EN, EN_UK","en"},{"English Swedish","en"},{"English, swedish","en"},{"English,Swedish","en"},{"Other (Svenska)","sv"},{"SE","se"},{"SV","sv"},{"SV charset=iso-8859-1","sv"},{"SV-FI","sv"},{"SV; charset=iso-8859-1","sv"},{"SVE","sv"},{"SW","sw"},{"SWE","sv"},{"SWEDISH","sv"},{"Sv","sv"},{"Sve","sv"},{"Svenska","sv"},{"Swedish","sv"},{"Swedish, svenska","sv"},{"en, sv","en"},{"sv","sv"},{"sv, be, dk, de, fr, no, pt, ch, fi, en","sv"},{"sv,en","sv"},{"sv-FI","sv"},{"sv-SE","sv"},{"sv-en","sv"},{"sv-fi","sv"},{"sv-se","sv"},{"sv; Content-Language: sv","sv"},{"sv_SE","sv"},{"sve","sv"},{"svenska, swedish, engelska, english","sv"},{"sw","sw"},{"swe","sv"},{"swe.SPR.","sv"},{"sweden","sv"},{"swedish","sv"},{"swedish,","sv"},{"text/html; charset=sv-SE","sv"},{"text/html; sv","sv"},{"torp, stuga, uthyres, bed & breakfast",null}};
  for (int i=0; i < 44; i++) {
    Assert.assertEquals(tests[i][1],HTMLLanguageParser.LanguageParser.parseLanguage(tests[i][0]));
  }
}
