{
  if (!hasNormalizablePattern.matcher(file).find())   return file;
  String fileWorkCopy=file;
  int oldLen=file.length();
  int newLen=oldLen - 1;
  Perl5Matcher matcher=(Perl5Matcher)matchers.get();
  while (oldLen != newLen) {
    oldLen=fileWorkCopy.length();
    fileWorkCopy=Util.substitute(matcher,relativePathRule.pattern,relativePathRule.substitution,fileWorkCopy,1);
    fileWorkCopy=Util.substitute(matcher,leadingRelativePathRule.pattern,leadingRelativePathRule.substitution,fileWorkCopy,1);
    fileWorkCopy=Util.substitute(matcher,currentPathRule.pattern,currentPathRule.substitution,fileWorkCopy,1);
    fileWorkCopy=Util.substitute(matcher,adjacentSlashRule.pattern,adjacentSlashRule.substitution,fileWorkCopy,1);
    newLen=fileWorkCopy.length();
  }
  return fileWorkCopy;
}
