{
  if (n instanceof Element) {
    String name=n.getNodeName();
    if (name.equalsIgnoreCase("script")) {
      StringBuffer script=new StringBuffer();
      NodeList nn=n.getChildNodes();
      if (nn.getLength() > 0) {
        for (int i=0; i < nn.getLength(); i++) {
          if (i > 0)           script.append('\n');
          script.append(nn.item(i).getNodeValue());
        }
        Outlink[] links=getJSLinks(script.toString(),"",base);
        if (links != null && links.length > 0)         outlinks.addAll(Arrays.asList(links));
        return;
      }
    }
 else {
      NamedNodeMap attrs=n.getAttributes();
      int len=attrs.getLength();
      for (int i=0; i < len; i++) {
        Node anode=attrs.item(i);
        Outlink[] links=null;
        if (anode.getNodeName().startsWith("on")) {
          links=getJSLinks(anode.getNodeValue(),"",base);
        }
 else         if (anode.getNodeName().equalsIgnoreCase("href")) {
          String val=anode.getNodeValue();
          if (val != null && val.toLowerCase().indexOf("javascript:") != -1) {
            links=getJSLinks(val,"",base);
          }
        }
        if (links != null && links.length > 0)         outlinks.addAll(Arrays.asList(links));
      }
    }
  }
  NodeList nl=n.getChildNodes();
  for (int i=0; i < nl.getLength(); i++) {
    walk(nl.item(i),parse,metaTags,base,outlinks);
  }
}
