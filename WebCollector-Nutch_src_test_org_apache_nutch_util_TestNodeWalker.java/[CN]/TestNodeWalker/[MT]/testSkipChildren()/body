{
  DOMParser parser=new DOMParser();
  try {
    parser.setFeature("http://xml.org/sax/features/validation",false);
    parser.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd",false);
    parser.parse(new InputSource(new ByteArrayInputStream(WEBPAGE.getBytes())));
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  StringBuffer sb=new StringBuffer();
  NodeWalker walker=new NodeWalker(parser.getDocument());
  while (walker.hasNext()) {
    Node currentNode=walker.nextNode();
    short nodeType=currentNode.getNodeType();
    if (nodeType == Node.TEXT_NODE) {
      String text=currentNode.getNodeValue();
      text=text.replaceAll("\\s+"," ");
      sb.append(text);
    }
  }
  Assert.assertTrue("UL Content can NOT be found in the node",findSomeUlContent(sb.toString()));
  StringBuffer sbSkip=new StringBuffer();
  NodeWalker walkerSkip=new NodeWalker(parser.getDocument());
  while (walkerSkip.hasNext()) {
    Node currentNode=walkerSkip.nextNode();
    String nodeName=currentNode.getNodeName();
    short nodeType=currentNode.getNodeType();
    if ("ul".equalsIgnoreCase(nodeName)) {
      walkerSkip.skipChildren();
    }
    if (nodeType == Node.TEXT_NODE) {
      String text=currentNode.getNodeValue();
      text=text.replaceAll("\\s+"," ");
      sbSkip.append(text);
    }
  }
  Assert.assertFalse("UL Content can be found in the node",findSomeUlContent(sbSkip.toString()));
}
