{
  this.conf=conf;
  String pluginName="urlfilter-domainblacklist";
  Extension[] extensions=PluginRepository.get(conf).getExtensionPoint(URLFilter.class.getName()).getExtensions();
  for (int i=0; i < extensions.length; i++) {
    Extension extension=extensions[i];
    if (extension.getDescriptor().getPluginId().equals(pluginName)) {
      attributeFile=extension.getAttribute("file");
      break;
    }
  }
  if (attributeFile != null && attributeFile.trim().equals("")) {
    attributeFile=null;
  }
  if (attributeFile != null) {
    if (LOG.isInfoEnabled()) {
      LOG.info("Attribute \"file\" is defined for plugin " + pluginName + " as "+ attributeFile);
    }
  }
 else {
    if (LOG.isWarnEnabled()) {
      LOG.warn("Attribute \"file\" is not defined in plugin.xml for plugin " + pluginName);
    }
  }
  String file=conf.get("urlfilter.domainblacklist.file");
  String stringRules=conf.get("urlfilter.domainblacklist.rules");
  if (domainFile != null) {
    file=domainFile;
  }
 else   if (attributeFile != null) {
    file=attributeFile;
  }
  Reader reader=null;
  if (stringRules != null) {
    reader=new StringReader(stringRules);
  }
 else {
    reader=conf.getConfResourceAsReader(file);
  }
  try {
    if (reader == null) {
      reader=new FileReader(file);
    }
    readConfiguration(reader);
  }
 catch (  IOException e) {
    LOG.error(org.apache.hadoop.util.StringUtils.stringifyException(e));
  }
}
