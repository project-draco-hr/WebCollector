{
  DOMFragmentParser parser=new DOMFragmentParser();
  ;
  try {
    currURLsAndAnswers=new URL[][]{{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org"),null},{new URL("http://www.nutch.org/foo/"),new URL("http://www.nutch.org/")},{new URL("http://www.nutch.org"),new URL("http://www.nutch.org/base/")}};
  }
 catch (  Exception e) {
    Assert.assertTrue("couldn't make test URLs!",false);
  }
  for (int i=0; i < tests.length; i++) {
    byte[] bytes=tests[i].getBytes();
    DocumentFragment node=new HTMLDocumentImpl().createDocumentFragment();
    try {
      parser.parse(new InputSource(new ByteArrayInputStream(bytes)),node);
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    HTMLMetaTags robotsMeta=new HTMLMetaTags();
    HTMLMetaProcessor.getMetaTags(robotsMeta,node,currURLsAndAnswers[i][0]);
    Assert.assertTrue("got index wrong on test " + i,robotsMeta.getNoIndex() == answers[i][0]);
    Assert.assertTrue("got follow wrong on test " + i,robotsMeta.getNoFollow() == answers[i][1]);
    Assert.assertTrue("got cache wrong on test " + i,robotsMeta.getNoCache() == answers[i][2]);
    Assert.assertTrue("got base href wrong on test " + i + " (got "+ robotsMeta.getBaseHref()+ ")",((robotsMeta.getBaseHref() == null) && (currURLsAndAnswers[i][1] == null)) || ((robotsMeta.getBaseHref() != null) && robotsMeta.getBaseHref().equals(currURLsAndAnswers[i][1])));
  }
}
