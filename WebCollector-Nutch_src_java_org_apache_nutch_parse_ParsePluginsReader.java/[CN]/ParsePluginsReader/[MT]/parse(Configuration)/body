{
  ParsePluginList pList=new ParsePluginList();
  DocumentBuilderFactory factory=null;
  DocumentBuilder parser=null;
  Document document=null;
  InputSource inputSource=null;
  InputStream ppInputStream=null;
  if (fParsePluginsFile != null) {
    URL parsePluginUrl=null;
    try {
      parsePluginUrl=new URL(fParsePluginsFile);
      ppInputStream=parsePluginUrl.openStream();
    }
 catch (    Exception e) {
      if (LOG.isWarnEnabled()) {
        LOG.warn("Unable to load parse plugins file from URL " + "[" + fParsePluginsFile + "]. Reason is ["+ e+ "]");
      }
      return pList;
    }
  }
 else {
    ppInputStream=conf.getConfResourceAsInputStream(conf.get(PP_FILE_PROP));
  }
  inputSource=new InputSource(ppInputStream);
  try {
    factory=DocumentBuilderFactory.newInstance();
    parser=factory.newDocumentBuilder();
    document=parser.parse(inputSource);
  }
 catch (  Exception e) {
    if (LOG.isWarnEnabled()) {
      LOG.warn("Unable to parse [" + fParsePluginsFile + "]."+ "Reason is ["+ e+ "]");
    }
    return null;
  }
  Element parsePlugins=document.getDocumentElement();
  Map<String,String> aliases=getAliases(parsePlugins);
  pList.setAliases(aliases);
  NodeList mimeTypes=parsePlugins.getElementsByTagName("mimeType");
  for (int i=0; i < mimeTypes.getLength(); i++) {
    Element mimeType=(Element)mimeTypes.item(i);
    String mimeTypeStr=mimeType.getAttribute("name");
    NodeList pluginList=mimeType.getElementsByTagName("plugin");
    if (pluginList != null && pluginList.getLength() > 0) {
      List<String> plugList=new ArrayList<String>(pluginList.getLength());
      for (int j=0; j < pluginList.getLength(); j++) {
        Element plugin=(Element)pluginList.item(j);
        String pluginId=plugin.getAttribute("id");
        String extId=aliases.get(pluginId);
        if (extId == null) {
          extId=pluginId;
        }
        String orderStr=plugin.getAttribute("order");
        int order=-1;
        try {
          order=Integer.parseInt(orderStr);
        }
 catch (        NumberFormatException ignore) {
        }
        if (order != -1) {
          plugList.add(order - 1,extId);
        }
 else {
          plugList.add(extId);
        }
      }
      pList.setPluginList(mimeTypeStr,plugList);
    }
 else     if (LOG.isWarnEnabled()) {
      LOG.warn("ParsePluginsReader:ERROR:no plugins defined for mime type: " + mimeTypeStr + ", continuing parse");
    }
  }
  return pList;
}
