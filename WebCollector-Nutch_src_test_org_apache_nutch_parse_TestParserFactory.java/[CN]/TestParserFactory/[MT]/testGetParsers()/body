{
  Parser[] parsers=parserFactory.getParsers("text/html","http://foo.com");
  Assert.assertNotNull(parsers);
  Assert.assertEquals(1,parsers.length);
  Assert.assertEquals("org.apache.nutch.parse.tika.TikaParser",parsers[0].getClass().getName());
  parsers=parserFactory.getParsers("text/html; charset=ISO-8859-1","http://foo.com");
  Assert.assertNotNull(parsers);
  Assert.assertEquals(1,parsers.length);
  Assert.assertEquals("org.apache.nutch.parse.tika.TikaParser",parsers[0].getClass().getName());
  parsers=parserFactory.getParsers("application/x-javascript","http://foo.com");
  Assert.assertNotNull(parsers);
  Assert.assertEquals(1,parsers.length);
  Assert.assertEquals("org.apache.nutch.parse.js.JSParseFilter",parsers[0].getClass().getName());
  parsers=parserFactory.getParsers("text/plain","http://foo.com");
  Assert.assertNotNull(parsers);
  Assert.assertEquals(1,parsers.length);
  Assert.assertEquals("org.apache.nutch.parse.tika.TikaParser",parsers[0].getClass().getName());
  Parser parser1=parserFactory.getParsers("text/plain","http://foo.com")[0];
  Parser parser2=parserFactory.getParsers("*","http://foo.com")[0];
  Assert.assertEquals("Different instances!",parser1.hashCode(),parser2.hashCode());
  parsers=parserFactory.getParsers("text/rss","http://foo.com");
  Assert.assertNotNull(parsers);
  Assert.assertEquals(1,parsers.length);
  Assert.assertEquals("org.apache.nutch.parse.tika.TikaParser",parsers[0].getClass().getName());
}
