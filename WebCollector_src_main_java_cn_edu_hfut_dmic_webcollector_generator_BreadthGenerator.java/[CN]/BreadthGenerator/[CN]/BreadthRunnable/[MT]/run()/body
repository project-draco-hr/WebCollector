{
  GenericRecord page_record=old_records.get(index);
  if ((int)page_record.get("status") == Page.FETCHED) {
    return;
  }
  Page page=new Page();
  page.url=page_record.get("url").toString();
  page=HttpUtils.fetchHttpResponse(page.url,conconfig,3);
  page_record.put("status",Page.FETCHED);
  page.fecthtime=System.currentTimeMillis();
  page_record.put("fetchtime",page.fecthtime);
  Log.Info("fetch",page.url);
  try {
    if (page.headers.containsKey("Content-Type")) {
      String contenttype=page.headers.get("Content-Type").toString();
      if (contenttype.contains("text/html")) {
        String charset=CharsetDetector.guessEncoding(page.content);
        page.html=new String(page.content,charset);
        page.doc=Jsoup.parse(page.html);
        page.doc.setBaseUri(page.url);
        ArrayList<String> outlinks=LinkParser.getLinks(page);
        for (int i=0; i < outlinks.size(); i++) {
          if (uniquefilter.shouldFilter(outlinks.get(i))) {
            outlinks.remove(i);
            i--;
            continue;
          }
          Page tempp=new Page();
          tempp.url=outlinks.get(i);
          if (shouldFilter(tempp)) {
            outlinks.remove(i);
            i--;
            continue;
          }
          uniquefilter.addUrl(outlinks.get(i));
        }
        int maxlink=-1;
        if (topN == null) {
          maxlink=outlinks.size();
        }
 else {
          maxlink=topN;
          if (maxlink > outlinks.size()) {
            maxlink=outlinks.size();
          }
        }
        for (int i=0; i < maxlink; i++) {
          String link=outlinks.get(i);
          GenericRecord outlink_record=new GenericData.Record(schema);
          outlink_record.put("url",link);
          outlink_record.put("status",Page.UNFETCHED);
synchronized (old_records) {
            old_records.add(outlink_record);
          }
        }
      }
 else {
      }
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  Message msg=new Message();
  msg.obj=page;
  handler.sendMessage(msg);
}
