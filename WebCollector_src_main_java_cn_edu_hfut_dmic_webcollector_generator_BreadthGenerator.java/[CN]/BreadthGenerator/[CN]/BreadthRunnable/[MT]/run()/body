{
  if (page_record.status == Page.FETCHED) {
    if (Config.interval == -1) {
      return;
    }
    if (page_record.fetchtime != -1) {
      Long lasttime=page_record.fetchtime;
      IntervalFilter intervalfilter=new IntervalFilter();
      if (intervalfilter.shouldFilter(lasttime)) {
        return;
      }
 else {
      }
    }
  }
  Page page=new Page();
  page.url=page_record.url;
  try {
    page=HttpUtils.fetchHttpResponse(page.url,conconfig,3);
  }
 catch (  Exception ex) {
    Log.Errors("failed ",page.url);
    Message msg=new Message();
    msg.what=BreadthGenerator.FETCH_FAILED;
    msg.obj=page;
    handler.sendMessage(msg);
    return;
  }
  if (page == null) {
    Log.Errors("failed ",page.url);
    Message msg=new Message();
    msg.what=BreadthGenerator.FETCH_FAILED;
    msg.obj=page;
    handler.sendMessage(msg);
    return;
  }
  page_record.status=Page.FETCHED;
  page.fetchtime=System.currentTimeMillis();
  page_record.fetchtime=page.fetchtime;
  Log.Infos("fetch",BreadthGenerator.this.taskname,page.url);
  try {
    if (page.headers.containsKey("Content-Type")) {
      String contenttype=page.headers.get("Content-Type").toString();
      if (contenttype.contains("text/html")) {
        HtmlParser htmlparser=new HtmlParser();
        ParseResult parseresult=htmlparser.getParse(page);
        ArrayList<Link> links=parseresult.links;
        int updatesize;
        if (topN == null) {
          updatesize=links.size();
        }
 else {
          updatesize=Math.min(topN,links.size());
        }
        int sum=0;
        for (int i=0; i < links.size(); i++) {
          if (sum >= updatesize) {
            break;
          }
          Link link=links.get(i);
          if (uniquefilter.shouldFilter(link.url)) {
            continue;
          }
          if (shouldFilter(link.url)) {
            continue;
          }
          uniquefilter.addUrl(link.url);
          WritablePage outlink_record=new WritablePage();
          outlink_record.url=link.url;
          outlink_record.status=Page.UNFETCHED;
synchronized (old_records) {
            old_records.add(outlink_record);
          }
          sum++;
        }
      }
 else {
      }
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  Message msg=new Message();
  msg.what=BreadthGenerator.FETCH_SUCCESS;
  msg.obj=page;
  handler.sendMessage(msg);
}
