{
  try {
    readOldinfo();
  }
 catch (  IOException ex) {
    ex.printStackTrace();
  }
  workqueue=new WorkQueue(threads);
  int unfetched_count=0;
  boolean hasUnfetched=false;
  for (int i=0; i < oldlength; i++) {
    JSONObject page_object=oldinfo.getJSONObject(i);
    if (page_object.getInt("status") == Page.UNFETCHED) {
      if (hasUnfetched == false)       hasUnfetched=true;
      unfetched_count++;
    }
  }
  Log.Info(unfetched_count + " pages to fetch");
  if (!hasUnfetched) {
    Log.Info("Nothing to fetch");
    return;
  }
  for (int i=0; i < oldlength; i++) {
    BreadthRunnable breathrunnable=new BreadthRunnable(i);
    workqueue.execute(breathrunnable);
  }
  try {
    while (workqueue.isAlive()) {
      Thread.sleep(5000);
    }
    stop();
  }
 catch (  InterruptedException ex) {
    ex.printStackTrace();
  }
}
