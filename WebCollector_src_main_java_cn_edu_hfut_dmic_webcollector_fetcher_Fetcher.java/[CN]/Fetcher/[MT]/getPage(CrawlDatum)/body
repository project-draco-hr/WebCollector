{
  String url=crawlDatum.getUrl();
  Page page;
  HttpResponse response=null;
  int retryIndex=0;
  Exception lastException=null;
  int retryCount=0;
  for (; retryIndex <= retry; retryIndex++) {
    try {
      response=requester.getResponse(crawlDatum);
      break;
    }
 catch (    Exception ex) {
      String suffix="th ";
switch (retryIndex + 1) {
case 1:
        suffix="st ";
      break;
case 2:
    suffix="nd ";
  break;
case 3:
suffix="rd ";
break;
default :
suffix="th ";
}
lastException=ex;
if (retryIndex < retry) {
StringBuilder sb=new StringBuilder();
sb.append("retry ").append(retryIndex + 1).append(suffix).append("URL:").append(url).append(" after ").append(retryInterval).append("ms ").append("(").append(ex.toString()).append(")");
String logMessage=sb.toString();
LOG.info(logMessage);
retryCount++;
if (retryInterval > 0) {
try {
Thread.sleep(retryInterval);
}
 catch (Exception sleepEx) {
}
}
}
}
}
if (response != null) {
LOG.info("fetch URL: " + url);
page=Page.createSuccessPage(crawlDatum,retryCount,response);
}
 else {
LOG.info("failed URL: " + url + " ("+ lastException+ ")");
page=Page.createFailedPage(crawlDatum,retryCount,lastException);
}
return page;
}
