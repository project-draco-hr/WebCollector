{
  activeThreads.incrementAndGet();
  FetchItem item=null;
  try {
    while (running) {
      try {
        item=fetchQueue.getFetchItem();
        if (item == null) {
          if (feeder.isAlive() || fetchQueue.getSize() > 0) {
            spinWaiting.incrementAndGet();
            try {
              Thread.sleep(500);
            }
 catch (            Exception ex) {
            }
            spinWaiting.decrementAndGet();
            continue;
          }
 else {
            return;
          }
        }
        lastRequestStart.set(System.currentTimeMillis());
        String url=item.datum.getUrl();
        HttpResponse response=null;
        CrawlDatum crawlDatum=null;
        int retryCount=0;
        Exception lastException=null;
        for (; retryCount <= retry; retryCount++) {
          if (retryCount > 0) {
            String suffix="th ";
switch (retryCount) {
case 1:
              suffix="st ";
            break;
case 2:
          suffix="nd ";
        break;
case 3:
      suffix="rd ";
    break;
default :
  suffix="th ";
}
LOG.info("retry " + retryCount + suffix+ url);
}
try {
response=httpRequester.getResponse(url);
break;
}
 catch (Exception ex) {
lastException=ex;
String logMessage="fetch " + url + " failed,"+ ex.toString();
if (retryCount < retry) {
logMessage+="   retry";
}
LOG.info(logMessage);
}
}
if (response != null) {
LOG.info("fetch " + url);
crawlDatum=new CrawlDatum(url,CrawlDatum.STATUS_DB_FETCHED,item.datum.getRetry() + retryCount);
}
 else {
LOG.info("failed " + url + " "+ lastException.toString());
crawlDatum=new CrawlDatum(url,CrawlDatum.STATUS_DB_UNFETCHED,item.datum.getRetry() + retryCount);
}
try {
dbUpdater.getSegmentWriter().wrtieFetch(crawlDatum);
if (response == null) {
continue;
}
if (response.getRedirect()) {
if (response.getRealUrl() != null) {
dbUpdater.getSegmentWriter().writeRedirect(response.getUrl().toString(),response.getRealUrl().toString());
}
}
String contentType=response.getContentType();
Visitor visitor=visitorFactory.createVisitor(url,contentType);
Page page=new Page();
page.setUrl(url);
page.setResponse(response);
if (visitor != null) {
Links nextLinks=null;
try {
nextLinks=visitor.visitAndGetNextLinks(page);
}
 catch (Exception ex) {
LOG.info("Exception",ex);
}
if (nextLinks != null && !nextLinks.isEmpty()) {
dbUpdater.getSegmentWriter().wrtieLinks(nextLinks);
}
}
}
 catch (Exception ex) {
LOG.info("Exception",ex);
}
}
 catch (Exception ex) {
LOG.info("Exception",ex);
}
}
}
 catch (Exception ex) {
LOG.info("Exception",ex);
}
 finally {
activeThreads.decrementAndGet();
}
}
