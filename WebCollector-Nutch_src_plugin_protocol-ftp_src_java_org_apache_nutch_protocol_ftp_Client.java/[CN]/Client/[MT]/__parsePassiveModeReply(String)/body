{
  int i, index, lastIndex;
  String octet1, octet2;
  StringBuffer host;
  reply=reply.substring(reply.indexOf('(') + 1,reply.indexOf(')')).trim();
  host=new StringBuffer(24);
  lastIndex=0;
  index=reply.indexOf(',');
  host.append(reply.substring(lastIndex,index));
  for (i=0; i < 3; i++) {
    host.append('.');
    lastIndex=index + 1;
    index=reply.indexOf(',',lastIndex);
    host.append(reply.substring(lastIndex,index));
  }
  lastIndex=index + 1;
  index=reply.indexOf(',',lastIndex);
  octet1=reply.substring(lastIndex,index);
  octet2=reply.substring(index + 1);
  try {
    index=Integer.parseInt(octet1);
    lastIndex=Integer.parseInt(octet2);
  }
 catch (  NumberFormatException e) {
    throw new MalformedServerReplyException("Could not parse passive host information.\nServer Reply: " + reply);
  }
  index<<=8;
  index|=lastIndex;
  __passiveHost=host.toString();
  __passivePort=index;
}
