{
  if (args.length < 2) {
    System.err.println("Usage: PluginRepository pluginId className [arg1 arg2 ...]");
    return;
  }
  Configuration conf=NutchConfiguration.create();
  PluginRepository repo=new PluginRepository(conf);
  PluginDescriptor d=repo.getPluginDescriptor(args[0]);
  if (d == null) {
    System.err.println("Plugin '" + args[0] + "' not present or inactive.");
    return;
  }
  ClassLoader cl=d.getClassLoader();
  Class<?> clazz=null;
  try {
    clazz=Class.forName(args[1],true,cl);
  }
 catch (  Exception e) {
    System.err.println("Could not load the class '" + args[1] + ": "+ e.getMessage());
    return;
  }
  Method m=null;
  try {
    m=clazz.getMethod("main",new Class<?>[]{args.getClass()});
  }
 catch (  Exception e) {
    System.err.println("Could not find the 'main(String[])' method in class " + args[1] + ": "+ e.getMessage());
    return;
  }
  String[] subargs=new String[args.length - 2];
  System.arraycopy(args,2,subargs,0,subargs.length);
  m.invoke(null,new Object[]{subargs});
}
