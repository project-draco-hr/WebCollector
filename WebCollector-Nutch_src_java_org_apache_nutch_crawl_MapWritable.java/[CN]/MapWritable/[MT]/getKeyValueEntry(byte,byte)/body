{
  KeyValueEntry entry=fOld;
  KeyValueEntry last=null;
  byte entryKeyId;
  byte entryValueId;
  while (entry != null) {
    entryKeyId=getClassId(entry.fKey.getClass());
    entryValueId=getClassId(entry.fValue.getClass());
    if (entryKeyId == keyId && entryValueId == valueId) {
      if (last != null) {
        last.fNextEntry=entry.fNextEntry;
      }
 else {
        fOld=entry.fNextEntry;
      }
      entry.fNextEntry=null;
      return entry;
    }
    last=entry;
    entry=entry.fNextEntry;
  }
  Class<?> keyClass=getClass(keyId);
  Class<?> valueClass=getClass(valueId);
  try {
    return new KeyValueEntry((Writable)keyClass.newInstance(),(Writable)valueClass.newInstance());
  }
 catch (  Exception e) {
    throw new IOException("unable to instantiate class: " + e.toString());
  }
}
