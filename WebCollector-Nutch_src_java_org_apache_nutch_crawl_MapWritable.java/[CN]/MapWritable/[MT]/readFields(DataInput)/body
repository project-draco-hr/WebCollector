{
  clear();
  fSize=in.readInt();
  if (fSize > 0) {
    fIdCount=in.readByte();
    byte id;
    Class<?> clazz;
    for (int i=0; i < fIdCount; i++) {
      try {
        id=in.readByte();
        clazz=Class.forName(Text.readString(in));
        addIdEntry(id,clazz);
      }
 catch (      Exception e) {
        if (LOG.isWarnEnabled()) {
          LOG.warn("Unable to load internal map entry" + e.toString());
        }
        fIdCount--;
      }
    }
    KeyValueEntry entry;
    for (int i=0; i < fSize; i++) {
      try {
        entry=getKeyValueEntry(in.readByte(),in.readByte());
        entry.fKey.readFields(in);
        entry.fValue.readFields(in);
        if (fFirst == null) {
          fFirst=fLast=entry;
        }
 else {
          fLast=fLast.fNextEntry=entry;
        }
      }
 catch (      IOException e) {
        if (LOG.isWarnEnabled()) {
          LOG.warn("Unable to load meta data entry, ignoring.. : " + e.toString());
        }
        fSize--;
      }
    }
  }
}
