{
  if (authRulesRead)   return;
  authRulesRead=true;
  InputStream is=conf.getConfResourceAsInputStream(authFile);
  if (is != null) {
    Document doc=DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(is);
    Element rootElement=doc.getDocumentElement();
    if (!"auth-configuration".equals(rootElement.getTagName())) {
      if (LOG.isWarnEnabled())       LOG.warn("Bad auth conf file: root element <" + rootElement.getTagName() + "> found in "+ authFile+ " - must be <auth-configuration>");
    }
    NodeList credList=rootElement.getChildNodes();
    for (int i=0; i < credList.getLength(); i++) {
      Node credNode=credList.item(i);
      if (!(credNode instanceof Element))       continue;
      Element credElement=(Element)credNode;
      if (!"credentials".equals(credElement.getTagName())) {
        if (LOG.isWarnEnabled())         LOG.warn("Bad auth conf file: Element <" + credElement.getTagName() + "> not recognized in "+ authFile+ " - expected <credentials>");
        continue;
      }
      String username=credElement.getAttribute("username");
      String password=credElement.getAttribute("password");
      NodeList scopeList=credElement.getChildNodes();
      for (int j=0; j < scopeList.getLength(); j++) {
        Node scopeNode=scopeList.item(j);
        if (!(scopeNode instanceof Element))         continue;
        Element scopeElement=(Element)scopeNode;
        if ("default".equals(scopeElement.getTagName())) {
          String realm=scopeElement.getAttribute("realm");
          String scheme=scopeElement.getAttribute("scheme");
          defaultUsername=username;
          defaultPassword=password;
          defaultRealm=realm;
          defaultScheme=scheme;
          if (LOG.isTraceEnabled()) {
            LOG.trace("Credentials - username: " + username + "; set as default"+ " for realm: "+ realm+ "; scheme: "+ scheme);
          }
        }
 else         if ("authscope".equals(scopeElement.getTagName())) {
          String host=scopeElement.getAttribute("host");
          int port=-1;
          try {
            port=Integer.parseInt(scopeElement.getAttribute("port"));
          }
 catch (          Exception ex) {
          }
          String realm=scopeElement.getAttribute("realm");
          String scheme=scopeElement.getAttribute("scheme");
          AuthScope authScope=getAuthScope(host,port,realm,scheme);
          NTCredentials credentials=new NTCredentials(username,password,agentHost,realm);
          client.getState().setCredentials(authScope,credentials);
          if (LOG.isTraceEnabled()) {
            LOG.trace("Credentials - username: " + username + "; set for AuthScope - "+ "host: "+ host+ "; port: "+ port+ "; realm: "+ realm+ "; scheme: "+ scheme);
          }
        }
 else {
          if (LOG.isWarnEnabled())           LOG.warn("Bad auth conf file: Element <" + scopeElement.getTagName() + "> not recognized in "+ authFile+ " - expected <authscope>");
        }
      }
      is.close();
    }
  }
}
