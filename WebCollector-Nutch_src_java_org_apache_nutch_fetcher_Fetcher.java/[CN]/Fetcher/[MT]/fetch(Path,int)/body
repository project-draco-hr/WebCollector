{
  checkConfiguration();
  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
  long start=System.currentTimeMillis();
  if (LOG.isInfoEnabled()) {
    LOG.info("Fetcher: starting at " + sdf.format(start));
    LOG.info("Fetcher: segment: " + segment);
  }
  long timelimit=getConf().getLong("fetcher.timelimit.mins",-1);
  if (timelimit != -1) {
    timelimit=System.currentTimeMillis() + (timelimit * 60 * 1000);
    LOG.info("Fetcher Timelimit set for : " + timelimit);
    getConf().setLong("fetcher.timelimit",timelimit);
  }
  timelimit=getConf().getLong("fetcher.throughput.threshold.check.after",10);
  timelimit=System.currentTimeMillis() + (timelimit * 60 * 1000);
  getConf().setLong("fetcher.throughput.threshold.check.after",timelimit);
  int maxOutlinkDepth=getConf().getInt("fetcher.follow.outlinks.depth",-1);
  if (maxOutlinkDepth > 0) {
    LOG.info("Fetcher: following outlinks up to depth: " + Integer.toString(maxOutlinkDepth));
    int maxOutlinkDepthNumLinks=getConf().getInt("fetcher.follow.outlinks.num.links",4);
    int outlinksDepthDivisor=getConf().getInt("fetcher.follow.outlinks.depth.divisor",2);
    int totalOutlinksToFollow=0;
    for (int i=0; i < maxOutlinkDepth; i++) {
      totalOutlinksToFollow+=(int)Math.floor(outlinksDepthDivisor / (i + 1) * maxOutlinkDepthNumLinks);
    }
    LOG.info("Fetcher: maximum outlinks to follow: " + Integer.toString(totalOutlinksToFollow));
  }
  JobConf job=new NutchJob(getConf());
  job.setJobName("fetch " + segment);
  job.setInt("fetcher.threads.fetch",threads);
  job.set(Nutch.SEGMENT_NAME_KEY,segment.getName());
  job.setSpeculativeExecution(false);
  FileInputFormat.addInputPath(job,new Path(segment,CrawlDatum.GENERATE_DIR_NAME));
  job.setInputFormat(InputFormat.class);
  job.setMapRunnerClass(Fetcher.class);
  FileOutputFormat.setOutputPath(job,segment);
  job.setOutputFormat(FetcherOutputFormat.class);
  job.setOutputKeyClass(Text.class);
  job.setOutputValueClass(NutchWritable.class);
  JobClient.runJob(job);
  long end=System.currentTimeMillis();
  LOG.info("Fetcher: finished at " + sdf.format(end) + ", elapsed: "+ TimingUtil.elapsedTime(start,end));
}
