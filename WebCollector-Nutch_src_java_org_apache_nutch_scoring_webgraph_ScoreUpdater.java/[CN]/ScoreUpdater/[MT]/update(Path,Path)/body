{
  SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
  long start=System.currentTimeMillis();
  LOG.info("ScoreUpdater: starting at " + sdf.format(start));
  Configuration conf=getConf();
  FileSystem fs=FileSystem.get(conf);
  LOG.info("Running crawldb update " + crawlDb);
  Path nodeDb=new Path(webGraphDb,WebGraph.NODE_DIR);
  Path crawlDbCurrent=new Path(crawlDb,CrawlDb.CURRENT_NAME);
  Path newCrawlDb=new Path(crawlDb,Integer.toString(new Random().nextInt(Integer.MAX_VALUE)));
  JobConf updater=new NutchJob(conf);
  updater.setJobName("Update CrawlDb from WebGraph");
  FileInputFormat.addInputPath(updater,crawlDbCurrent);
  FileInputFormat.addInputPath(updater,nodeDb);
  FileOutputFormat.setOutputPath(updater,newCrawlDb);
  updater.setInputFormat(SequenceFileInputFormat.class);
  updater.setMapperClass(ScoreUpdater.class);
  updater.setReducerClass(ScoreUpdater.class);
  updater.setMapOutputKeyClass(Text.class);
  updater.setMapOutputValueClass(ObjectWritable.class);
  updater.setOutputKeyClass(Text.class);
  updater.setOutputValueClass(CrawlDatum.class);
  updater.setOutputFormat(MapFileOutputFormat.class);
  try {
    JobClient.runJob(updater);
  }
 catch (  IOException e) {
    LOG.error(StringUtils.stringifyException(e));
    if (fs.exists(newCrawlDb)) {
      fs.delete(newCrawlDb,true);
    }
    throw e;
  }
  LOG.info("ScoreUpdater: installing new crawldb " + crawlDb);
  CrawlDb.install(updater,crawlDb);
  long end=System.currentTimeMillis();
  LOG.info("ScoreUpdater: finished at " + sdf.format(end) + ", elapsed: "+ TimingUtil.elapsedTime(start,end));
}
