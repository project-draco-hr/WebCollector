{
  float score=scoreInjected;
  String scoreString=parseData.getContentMeta().get(Nutch.SCORE_KEY);
  if (scoreString != null) {
    try {
      score=Float.parseFloat(scoreString);
    }
 catch (    Exception e) {
      LOG.error("Error: ",e);
    }
  }
  int validCount=targets.size();
  if (countFiltered) {
    score/=allCount;
  }
 else {
    if (validCount == 0) {
      return adjust;
    }
    score/=validCount;
  }
  float internalScore=score * internalScoreFactor;
  float externalScore=score * externalScoreFactor;
  for (  Entry<Text,CrawlDatum> target : targets) {
    try {
      String toHost=new URL(target.getKey().toString()).getHost();
      String fromHost=new URL(fromUrl.toString()).getHost();
      if (toHost.equalsIgnoreCase(fromHost)) {
        target.getValue().setScore(internalScore);
      }
 else {
        target.getValue().setScore(externalScore);
      }
    }
 catch (    MalformedURLException e) {
      LOG.error("Error: ",e);
      target.getValue().setScore(externalScore);
    }
  }
  return adjust;
}
