{
  if (args.length < 2) {
    System.err.println("Usage: LinkDbMerger <output_linkdb> <linkdb1> [<linkdb2> <linkdb3> ...] [-normalize] [-filter]");
    System.err.println("\toutput_linkdb\toutput LinkDb");
    System.err.println("\tlinkdb1 ...\tinput LinkDb-s (single input LinkDb is ok)");
    System.err.println("\t-normalize\tuse URLNormalizer on both fromUrls and toUrls in linkdb(s) (usually not needed)");
    System.err.println("\t-filter\tuse URLFilters on both fromUrls and toUrls in linkdb(s)");
    return -1;
  }
  Path output=new Path(args[0]);
  ArrayList<Path> dbs=new ArrayList<Path>();
  boolean normalize=false;
  boolean filter=false;
  for (int i=1; i < args.length; i++) {
    if (args[i].equals("-filter")) {
      filter=true;
    }
 else     if (args[i].equals("-normalize")) {
      normalize=true;
    }
 else     dbs.add(new Path(args[i]));
  }
  try {
    merge(output,dbs.toArray(new Path[dbs.size()]),normalize,filter);
    return 0;
  }
 catch (  Exception e) {
    LOG.error("LinkDbMerger: " + StringUtils.stringifyException(e));
    return -1;
  }
}
