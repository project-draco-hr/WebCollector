{
  String text=null;
  Vector<Outlink> outlinks=new Vector<Outlink>();
  try {
    byte[] raw=content.getContent();
    String contentLength=content.getMetadata().get(Response.CONTENT_LENGTH);
    if (contentLength != null && raw.length != Integer.parseInt(contentLength)) {
      return new ParseStatus(ParseStatus.FAILED,ParseStatus.FAILED_TRUNCATED,"Content truncated at " + raw.length + " bytes. Parser can't handle incomplete files.").getEmptyParseResult(content.getUrl(),getConf());
    }
    ExtractText extractor=new ExtractText();
    TagParser parser=new TagParser(extractor);
    SWFReader reader=new SWFReader(parser,new InStream(raw));
    reader.readFile();
    text=extractor.getText();
    String atext=extractor.getActionText();
    if (atext != null && atext.length() > 0)     text+="\n--------\n" + atext;
    String[] links=extractor.getUrls();
    for (int i=0; i < links.length; i++) {
      Outlink out=new Outlink(links[i],"");
      outlinks.add(out);
    }
    Outlink[] olinks=OutlinkExtractor.getOutlinks(text,conf);
    if (olinks != null)     for (int i=0; i < olinks.length; i++) {
      outlinks.add(olinks[i]);
    }
  }
 catch (  Exception e) {
    LOG.error("Error, runtime exception: ",e);
    return new ParseStatus(ParseStatus.FAILED,"Can't be handled as SWF document. " + e).getEmptyParseResult(content.getUrl(),getConf());
  }
  if (text == null)   text="";
  Outlink[] links=(Outlink[])outlinks.toArray(new Outlink[outlinks.size()]);
  ParseData parseData=new ParseData(ParseStatus.STATUS_SUCCESS,"",links,content.getMetadata());
  return ParseResult.createParseResult(content.getUrl(),new ParseImpl(text,parseData));
}
