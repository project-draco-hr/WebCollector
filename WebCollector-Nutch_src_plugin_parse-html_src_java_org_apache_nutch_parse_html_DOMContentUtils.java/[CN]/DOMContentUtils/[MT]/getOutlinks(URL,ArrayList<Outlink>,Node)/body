{
  NodeWalker walker=new NodeWalker(node);
  while (walker.hasNext()) {
    Node currentNode=walker.nextNode();
    String nodeName=currentNode.getNodeName();
    short nodeType=currentNode.getNodeType();
    NodeList children=currentNode.getChildNodes();
    int childLen=(children != null) ? children.getLength() : 0;
    if (nodeType == Node.ELEMENT_NODE) {
      nodeName=nodeName.toLowerCase();
      LinkParams params=(LinkParams)linkParams.get(nodeName);
      if (params != null) {
        if (!shouldThrowAwayLink(currentNode,children,childLen,params)) {
          StringBuffer linkText=new StringBuffer();
          getText(linkText,currentNode,true);
          if (linkText.toString().trim().length() == 0) {
            NodeWalker subWalker=new NodeWalker(currentNode);
            while (subWalker.hasNext()) {
              Node subNode=subWalker.nextNode();
              if (subNode.getNodeType() == Node.ELEMENT_NODE) {
                if (subNode.getNodeName().toLowerCase().equals("img")) {
                  NamedNodeMap subAttrs=subNode.getAttributes();
                  Node alt=subAttrs.getNamedItem("alt");
                  if (alt != null) {
                    String altTxt=alt.getTextContent();
                    if (altTxt != null && altTxt.trim().length() > 0) {
                      if (linkText.length() > 0)                       linkText.append(' ');
                      linkText.append(altTxt);
                    }
                  }
                }
 else {
                }
              }
 else               if (subNode.getNodeType() == Node.TEXT_NODE) {
                String txt=subNode.getTextContent();
                if (txt != null && txt.length() > 0) {
                  if (linkText.length() > 0)                   linkText.append(' ');
                  linkText.append(txt);
                }
              }
            }
          }
          NamedNodeMap attrs=currentNode.getAttributes();
          String target=null;
          boolean noFollow=false;
          boolean post=false;
          for (int i=0; i < attrs.getLength(); i++) {
            Node attr=attrs.item(i);
            String attrName=attr.getNodeName();
            if (params.attrName.equalsIgnoreCase(attrName)) {
              target=attr.getNodeValue();
            }
 else             if ("rel".equalsIgnoreCase(attrName) && "nofollow".equalsIgnoreCase(attr.getNodeValue())) {
              noFollow=true;
            }
 else             if ("method".equalsIgnoreCase(attrName) && "post".equalsIgnoreCase(attr.getNodeValue())) {
              post=true;
            }
          }
          if (target != null && !noFollow && !post)           try {
            URL url=URLUtil.resolveURL(base,target);
            outlinks.add(new Outlink(url.toString(),linkText.toString().trim()));
          }
 catch (          MalformedURLException e) {
          }
        }
        if (params.childLen == 0)         continue;
      }
    }
  }
}
