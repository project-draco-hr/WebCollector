{
  if (LOG.isInfoEnabled()) {
    LOG.info("SegmentReader: dump segment: " + segment);
  }
  JobConf job=createJobConf();
  job.setJobName("read " + segment);
  if (ge)   FileInputFormat.addInputPath(job,new Path(segment,CrawlDatum.GENERATE_DIR_NAME));
  if (fe)   FileInputFormat.addInputPath(job,new Path(segment,CrawlDatum.FETCH_DIR_NAME));
  if (pa)   FileInputFormat.addInputPath(job,new Path(segment,CrawlDatum.PARSE_DIR_NAME));
  if (co)   FileInputFormat.addInputPath(job,new Path(segment,Content.DIR_NAME));
  if (pd)   FileInputFormat.addInputPath(job,new Path(segment,ParseData.DIR_NAME));
  if (pt)   FileInputFormat.addInputPath(job,new Path(segment,ParseText.DIR_NAME));
  job.setInputFormat(SequenceFileInputFormat.class);
  job.setMapperClass(InputCompatMapper.class);
  job.setReducerClass(SegmentReader.class);
  Path tempDir=new Path(job.get("hadoop.tmp.dir","/tmp") + "/segread-" + new java.util.Random().nextInt());
  fs.delete(tempDir,true);
  FileOutputFormat.setOutputPath(job,tempDir);
  job.setOutputFormat(TextOutputFormat.class);
  job.setOutputKeyClass(Text.class);
  job.setOutputValueClass(NutchWritable.class);
  JobClient.runJob(job);
  Path dumpFile=new Path(output,job.get("segment.dump.dir","dump"));
  fs.delete(dumpFile,true);
  FileStatus[] fstats=fs.listStatus(tempDir,HadoopFSUtil.getPassAllFilter());
  Path[] files=HadoopFSUtil.getPaths(fstats);
  PrintWriter writer=null;
  int currentRecordNumber=0;
  if (files.length > 0) {
    writer=new PrintWriter(new BufferedWriter(new OutputStreamWriter(fs.create(dumpFile))));
    try {
      for (int i=0; i < files.length; i++) {
        Path partFile=files[i];
        try {
          currentRecordNumber=append(fs,job,partFile,writer,currentRecordNumber);
        }
 catch (        IOException exception) {
          if (LOG.isWarnEnabled()) {
            LOG.warn("Couldn't copy the content of " + partFile.toString() + " into "+ dumpFile.toString());
            LOG.warn(exception.getMessage());
          }
        }
      }
    }
  finally {
      writer.close();
    }
  }
  fs.delete(tempDir,true);
  if (LOG.isInfoEnabled()) {
    LOG.info("SegmentReader: done");
  }
}
