{
  boolean needInject=true;
  if (resumable && dbManager.isDBExists()) {
    needInject=false;
  }
  if (!resumable) {
    if (dbManager.isDBExists()) {
      dbManager.clear();
    }
    if (seeds.isEmpty() && forcedSeeds.isEmpty()) {
      LOG.info("error:Please add at least one seed");
      return;
    }
  }
  dbManager.open();
  if (needInject) {
    inject();
  }
  if (!forcedSeeds.isEmpty()) {
    injectForcedSeeds();
  }
  Generator generator=dbManager.getGenerator();
  if (maxExecuteCount >= 0) {
    generator.setMaxExecuteCount(maxExecuteCount);
  }
 else {
    generator.setMaxExecuteCount(Config.MAX_EXECUTE_COUNT);
  }
  generator.setTopN(topN);
  status=RUNNING;
  for (int i=0; i < depth; i++) {
    if (status == STOPED) {
      break;
    }
    LOG.info("start depth " + (i + 1));
    long startTime=System.currentTimeMillis();
    fetcher=new Fetcher();
    fetcher.setDBManager(dbManager);
    fetcher.setExecutor(executor);
    fetcher.setThreads(threads);
    fetcher.fetchAll(generator);
    long endTime=System.currentTimeMillis();
    long costTime=(endTime - startTime) / 1000;
    int totalGenerate=generator.getTotalGenerate();
    LOG.info("depth " + (i + 1) + " finish: \n\ttotal urls:\t"+ totalGenerate+ "\n\ttotal time:\t"+ costTime+ " seconds");
    if (totalGenerate == 0) {
      break;
    }
  }
  dbManager.close();
}
