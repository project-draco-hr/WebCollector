{
  File dir=new File(crawlPath);
  boolean needInject=true;
  if (resumable && dir.exists()) {
    needInject=false;
  }
  if (resumable && !dir.exists()) {
    dir.mkdirs();
  }
  if (!resumable) {
    if (dir.exists()) {
      FileUtils.deleteDir(dir);
    }
    dir.mkdirs();
    if (seeds.isEmpty() && forcedSeeds.isEmpty()) {
      LOG.info("error:Please add at least one seed");
      return;
    }
  }
  EnvironmentConfig environmentConfig=new EnvironmentConfig();
  environmentConfig.setAllowCreate(true);
  env=new Environment(dir,environmentConfig);
  if (needInject) {
    inject();
  }
  if (!forcedSeeds.isEmpty()) {
    injectForcedSeeds();
  }
  status=RUNNING;
  for (int i=0; i < depth; i++) {
    if (status == STOPED) {
      break;
    }
    LOG.info("starting depth " + (i + 1));
    Database crawldbDatabase=env.openDatabase(null,"crawldb",BerkeleyDBUtils.defaultDBConfig);
    Cursor crawldbCursor=crawldbDatabase.openCursor(null,CursorConfig.DEFAULT);
    Generator generator=new StandardGenerator(crawldbCursor);
    fetcher=new Fetcher();
    fetcher.setRetry(retry);
    fetcher.setHttpRequester(httpRequester);
    fetcher.setDbUpdater(new DbUpdater(env));
    fetcher.setVisitorFactory(visitorFactory);
    fetcher.setThreads(threads);
    fetcher.fetchAll(generator);
    crawldbCursor.close();
    crawldbDatabase.close();
  }
  env.close();
}
