{
  LogUtils.getLogger().info("merge " + tableName);
  AtomicInteger mergeCount=new AtomicInteger(0);
  String crawldb=tableName + RedisHelper.suffix_crawldb;
  String fetch=tableName + RedisHelper.suffix_fetch;
  String parse=tableName + RedisHelper.suffix_parse;
  Set fetchSet=redisHelper.jedis.hkeys(fetch);
  Iterator fetchIte=fetchSet.iterator();
  while (fetchIte.hasNext()) {
    String url=fetchIte.next().toString();
    String value=redisHelper.jedis.hget(fetch,url);
    redisHelper.jedis.hset(crawldb,url,value);
    if (mergeCount.incrementAndGet() % 10000 == 0) {
      LogUtils.getLogger().info(mergeCount.get() + "crawldatums merged from fetch");
    }
  }
  redisHelper.jedis.del(fetch);
  Set parseSet=redisHelper.jedis.hkeys(parse);
  Iterator parseIte=parseSet.iterator();
  while (parseIte.hasNext()) {
    String url=parseIte.next().toString();
    if (redisHelper.jedis.hget(crawldb,url) == null) {
      String value=redisHelper.jedis.hget(parse,url);
      redisHelper.jedis.hset(crawldb,url,value);
    }
    if (mergeCount.incrementAndGet() % 10000 == 0) {
      LogUtils.getLogger().info(mergeCount.get() + "crawldatums merged from parse");
    }
  }
  redisHelper.jedis.del(parse);
}
