{
  if (args.length < 2) {
    System.out.println("Usage: Generator <crawldb> <segments_dir> [-force] [-topN N] [-numFetchers numFetchers] [-adddays numDays] [-noFilter] [-noNorm][-maxNumSegments num]");
    return -1;
  }
  Path dbDir=new Path(args[0]);
  Path segmentsDir=new Path(args[1]);
  long curTime=System.currentTimeMillis();
  long topN=Long.MAX_VALUE;
  int numFetchers=-1;
  boolean filter=true;
  boolean norm=true;
  boolean force=false;
  int maxNumSegments=1;
  for (int i=2; i < args.length; i++) {
    if ("-topN".equals(args[i])) {
      topN=Long.parseLong(args[i + 1]);
      i++;
    }
 else     if ("-numFetchers".equals(args[i])) {
      numFetchers=Integer.parseInt(args[i + 1]);
      i++;
    }
 else     if ("-adddays".equals(args[i])) {
      long numDays=Integer.parseInt(args[i + 1]);
      curTime+=numDays * 1000L * 60* 60* 24;
    }
 else     if ("-noFilter".equals(args[i])) {
      filter=false;
    }
 else     if ("-noNorm".equals(args[i])) {
      norm=false;
    }
 else     if ("-force".equals(args[i])) {
      force=true;
    }
 else     if ("-maxNumSegments".equals(args[i])) {
      maxNumSegments=Integer.parseInt(args[i + 1]);
    }
  }
  try {
    Path[] segs=generate(dbDir,segmentsDir,numFetchers,topN,curTime,filter,norm,force,maxNumSegments);
    if (segs == null)     return -1;
  }
 catch (  Exception e) {
    LOG.error("Generator: " + StringUtils.stringifyException(e));
    return -1;
  }
  return 0;
}
