{
  DOMFragmentParser parser=new DOMFragmentParser();
  try {
    parser.setFeature("http://cyberneko.org/html/features/scanner/allow-selfclosing-iframe",true);
    parser.setFeature("http://cyberneko.org/html/features/augmentations",true);
    parser.setProperty("http://cyberneko.org/html/properties/default-encoding",defaultCharEncoding);
    parser.setFeature("http://cyberneko.org/html/features/scanner/ignore-specified-charset",true);
    parser.setFeature("http://cyberneko.org/html/features/balance-tags/ignore-outside-content",false);
    parser.setFeature("http://cyberneko.org/html/features/balance-tags/document-fragment",true);
    parser.setFeature("http://cyberneko.org/html/features/report-errors",LOG.isTraceEnabled());
  }
 catch (  SAXException e) {
  }
  HTMLDocumentImpl doc=new HTMLDocumentImpl();
  doc.setErrorChecking(false);
  DocumentFragment res=doc.createDocumentFragment();
  DocumentFragment frag=doc.createDocumentFragment();
  parser.parse(input,frag);
  res.appendChild(frag);
  try {
    while (true) {
      frag=doc.createDocumentFragment();
      parser.parse(input,frag);
      if (!frag.hasChildNodes())       break;
      if (LOG.isInfoEnabled()) {
        LOG.info(" - new frag, " + frag.getChildNodes().getLength() + " nodes.");
      }
      res.appendChild(frag);
    }
  }
 catch (  Exception e) {
    LOG.error("Error: ",e);
  }
  ;
  return res;
}
