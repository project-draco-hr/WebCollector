{
  if (childrenList == null) {
    childrenList=new LinkedList<TrieNode>();
    childrenList.addAll(Arrays.asList(children));
    children=null;
  }
  if (childrenList.size() == 0) {
    TrieNode newNode=new TrieNode(nextChar,isTerminal);
    childrenList.add(newNode);
    return newNode;
  }
  ListIterator<TrieNode> iter=childrenList.listIterator();
  TrieNode node=iter.next();
  while ((node.nodeChar < nextChar) && iter.hasNext())   node=iter.next();
  if (node.nodeChar == nextChar) {
    node.terminal=node.terminal | isTerminal;
    return node;
  }
  if (node.nodeChar > nextChar)   iter.previous();
  TrieNode newNode=new TrieNode(nextChar,isTerminal);
  iter.add(newNode);
  return newNode;
}
